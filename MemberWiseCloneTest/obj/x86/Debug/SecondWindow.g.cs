#pragma checksum "D:\UWP Test Projects\MemberWiseCloneTest\MemberWiseCloneTest\SecondWindow.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "3961D304C397BBBCCF749F31727333E8"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MemberWiseCloneTest
{
    partial class SecondWindow : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SecondWindow_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISecondWindow_Bindings
        {
            private global::MemberWiseCloneTest.SecondWindow dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj2;
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2TextDisabled = false;
            private static bool isobj3TextDisabled = false;

            private SecondWindow_obj1_BindingsTracking bindingsTracking;

            public SecondWindow_obj1_Bindings()
            {
                this.bindingsTracking = new SecondWindow_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 18 && columnNumber == 43)
                {
                    isobj2TextDisabled = true;
                }
                else if (lineNumber == 20 && columnNumber == 43)
                {
                    isobj3TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // SecondWindow.xaml line 17
                        this.obj2 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 3: // SecondWindow.xaml line 19
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // ISecondWindow_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::MemberWiseCloneTest.SecondWindow)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MemberWiseCloneTest.SecondWindow obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_TestValue(obj.TestValue, phase);
                    }
                }
            }
            private void Update_TestValue(global::MemberWiseCloneTest.TestValue obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_TestValue(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_TestValue_a(obj.a, phase);
                        this.Update_TestValue_b(obj.b, phase);
                    }
                }
            }
            private void Update_TestValue_a(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // SecondWindow.xaml line 17
                    if (!isobj2TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj2, obj.ToString(), null);
                    }
                }
            }
            private void Update_TestValue_b(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // SecondWindow.xaml line 19
                    if (!isobj3TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, obj.ToString(), null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SecondWindow_obj1_BindingsTracking
            {
                private global::System.WeakReference<SecondWindow_obj1_Bindings> weakRefToBindingObj; 

                public SecondWindow_obj1_BindingsTracking(SecondWindow_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SecondWindow_obj1_Bindings>(obj);
                }

                public SecondWindow_obj1_Bindings TryGetBindingObject()
                {
                    SecondWindow_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_TestValue(null);
                }

                public void DependencyPropertyChanged_TestValue(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    SecondWindow_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::MemberWiseCloneTest.SecondWindow obj = sender as global::MemberWiseCloneTest.SecondWindow;
                        if (obj != null)
                        {
                            bindings.Update_TestValue(obj.TestValue, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_TestValue = 0;
                public void UpdateChildListeners_(global::MemberWiseCloneTest.SecondWindow obj)
                {
                    SecondWindow_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::MemberWiseCloneTest.SecondWindow.TestValueProperty, tokenDPC_TestValue);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_TestValue = obj.RegisterPropertyChangedCallback(global::MemberWiseCloneTest.SecondWindow.TestValueProperty, DependencyPropertyChanged_TestValue);
                        }
                    }
                }
                public void PropertyChanged_TestValue(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SecondWindow_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::MemberWiseCloneTest.TestValue obj = sender as global::MemberWiseCloneTest.TestValue;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_TestValue_a(obj.a, DATA_CHANGED);
                                bindings.Update_TestValue_b(obj.b, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "a":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TestValue_a(obj.a, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "b":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_TestValue_b(obj.b, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::MemberWiseCloneTest.TestValue cache_TestValue = null;
                public void UpdateChildListeners_TestValue(global::MemberWiseCloneTest.TestValue obj)
                {
                    if (obj != cache_TestValue)
                    {
                        if (cache_TestValue != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_TestValue).PropertyChanged -= PropertyChanged_TestValue;
                            cache_TestValue = null;
                        }
                        if (obj != null)
                        {
                            cache_TestValue = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_TestValue;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // SecondWindow.xaml line 17
                {
                    this.hi = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 3: // SecondWindow.xaml line 19
                {
                    this.hi1 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 4: // SecondWindow.xaml line 21
                {
                    global::Windows.UI.Xaml.Controls.Button element4 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element4).Tapped += this.Button_Tapped;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // SecondWindow.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    SecondWindow_obj1_Bindings bindings = new SecondWindow_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

